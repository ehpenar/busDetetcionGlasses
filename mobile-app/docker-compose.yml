# 🐳 Docker Compose para Bus Detection Mobile App
# Este archivo orquesta el contenedor y define la configuración

services:
  # 📱 Servicio principal de la aplicación
  bus-detection-app:
    build:
      context: .
      dockerfile: Dockerfile
    
    # 📝 Explicación: build define cómo construir la imagen
    # context: . significa usar el directorio actual como contexto
    # dockerfile: Dockerfile especifica qué archivo usar
    
    container_name: bus-detection-mobile
    
    # 📝 Explicación: container_name le da un nombre específico al contenedor
    # Útil para referenciarlo en otros comandos
    
    ports:
      - "19000:19000"  # Metro bundler
      - "19001:19001"  # Expo DevTools
      - "19002:19002"  # Expo DevTools alternativo
    
    # 📝 Explicación: ports mapea puertos del contenedor al host
    # Formato: "puerto_host:puerto_contenedor"
    # Esto permite acceder a la app desde tu máquina
    
    volumes:
      - .:/app
      - /app/node_modules
    
    # 📝 Explicación: volumes monta directorios del host en el contenedor
    # .:/app sincroniza tu código local con el contenedor
    # /app/node_modules evita conflictos con node_modules del host
    
    environment:
      - NODE_ENV=development
      - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
    
    # 📝 Explicación: environment define variables de entorno
    # NODE_ENV=development activa modo desarrollo
    # EXPO_DEVTOOLS_LISTEN_ADDRESS permite acceso externo a DevTools
    
    stdin_open: true
    tty: true
    
    # 📝 Explicación: stdin_open y tty permiten interacción con el contenedor
    # Necesario para que Expo funcione correctamente
    
    networks:
      - bus-detection-network
    
    # 📝 Explicación: networks crea una red aislada para la aplicación
    # Útil si en el futuro agregamos más servicios (base de datos, etc.)

  # 🔧 Servicio opcional para desarrollo (solo si necesitas herramientas adicionales)
  # Puedes descomentar si necesitas una base de datos o API
  # 
  # database:
  #   image: postgres:15-alpine
  #   container_name: bus-detection-db
  #   environment:
  #     POSTGRES_DB: bus_detection
  #     POSTGRES_USER: expo
  #     POSTGRES_PASSWORD: password
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - bus-detection-network

# 🌐 Definición de redes
networks:
  bus-detection-network:
    driver: bridge
    
    # 📝 Explicación: bridge es el driver de red por defecto
    # Permite comunicación entre contenedores en la misma red

# 💾 Volúmenes persistentes (para futuras bases de datos)
volumes:
  postgres_data:
    driver: local
    
    # 📝 Explicación: Los volúmenes persisten datos entre reinicios del contenedor
    # Útil para bases de datos, caché, etc.
